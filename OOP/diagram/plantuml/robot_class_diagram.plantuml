@startuml "Robot Class Diagram"
skinparam class {
    BackgroundColor #ECECFF
    ArrowColor #000000
    BorderColor #AC93E5
}
skinparam stereotypeCBackgroundColor DeepSkyBlue
skinparam classAttributeIconSize 0

' Abstract base class
abstract class Robot {
    - _robot_id: str
    - _model: str
    - _operator: Operator
    - _battery: Battery
    + {abstract}perform_task()
    + move(destination: str, time_required: int)
    + assign_operator(operator: Operator)
    - {static}_validate_robot_id(robot_id: str): bool
}

class Battery {
    - _capacity: int
    - _charge_level: int
    + use(hours)
    + recharge()
}

class Operator {
    - _name: str
    + give_instruction(robot: Robot, instruction: str, time: int =1)
    - {static}_validate_name(name: str): bool
}

class CarrierRobot {
    - _load_capacity: float
    + perform_task() 
}

class ScannerRobot {
    - _scan_range: float
    + perform_task() 
}

class SorterRobot {
    - _sorting_speed: int
    + perform_task() 
}

' Relationships
Robot *-- Battery : has
Robot o-- Operator : controlled by
Robot <|-- CarrierRobot : extends
Robot <|-- ScannerRobot : extends
Robot <|-- SorterRobot : extends

' Notes
' note right of Robot : Abstract base class with common robot functionality
' note right of Battery : Composition: Essential part of the robot
' note right of Operator : Association: Exists independently
@enduml
